stages:
 - check_permissions
 - build
 - test_run_sim
 - test_run_reco
 - test_run_digi
 - deploy
 
before_script:
 - export SIMPATH=/opt/fairsoft/bmn
 - export FAIRROOTPATH=/opt/fairroot/bmn
 - source ./SetEnv.sh
 
variables:
 GIT_SUBMODULE_STRATEGY: recursive
 GREEN: '\033[1;32m'
 RED: '\033[1;31m'
 NC: '\033[0m'

.only-default: &only-default
  only:
    - merge_requests
    - dev
    - tags

check_permissions:
  variables:
    PERMISSIONS_MESSAGE_FAUILURE: "Permissions check: ${RED}FAILED${NC}. You don't have permission to change some files, please contact your project maintainers."
    PERMISSIONS_MESSAGE_SUCCESS: "Permissions check: ${GREEN}PASSED${NC}."
  tags:
    - test
  stage: check_permissions
  script:
    - >
      if git diff HEAD~ --name-only|grep .gitlab-ci.yml; then
        if grep -q $GITLAB_USER_LOGIN <<< $MAINTAINERS; then echo -e $PERMISSIONS_MESSAGE_SUCCESS $(exit 0); else echo -e $PERMISSIONS_MESSAGE_FAUILURE; $(exit -1); fi
      fi;
  allow_failure: false
  <<: *only-default
 
.build_template: &build
  stage: build
  artifacts:
    paths:
      - build
  script:
    - mkdir build
    - cd build
    - cmake "$CI_PROJECT_DIR"
    - make -j 5
  allow_failure: false
  <<: *only-default
  
build:centos:
  tags:
    - build
    - centos
  <<: *build

build:ubuntu:
  tags: 
    - build
    - ubuntu
  <<: *build 
  
.run_sim_template: &run_sim
  stage: test_run_sim
  artifacts:
    paths:
      - macro/run/bmnsim.root
      - macro/run/srcsim.root
  script:
    - source build/config.sh
    - root -b -q -l '$CI_PROJECT_DIR/$MACRO_NAME' | tee output.txt
    - (if grep -q "Macro finished successfully." output.txt; then $(exit 0); else $(exit -1); fi);
  allow_failure: false
  <<: *only-default
  
run_sim_bmn:centos:
  variables:
    MACRO_NAME: "macro/run/run_sim_bmn.C"
  tags:
    - test
    - centos
  dependencies:
    - build:centos
  <<: *run_sim

run_sim_bmn:ubuntu:
  variables:
    MACRO_NAME: "macro/run/run_sim_bmn.C"
  tags:
    - test
    - ubuntu
  dependencies:
    - build:ubuntu
  <<: *run_sim

run_sim_src:centos:
  variables:
    MACRO_NAME: "macro/run/run_sim_src.C"
  tags:
    - test
    - centos
  dependencies:
    - build:centos
  <<: *run_sim

run_sim_src:ubuntu:
  variables:
    MACRO_NAME: "macro/run/run_sim_src.C"
  tags:
    - test
    - ubuntu
  dependencies:
    - build:ubuntu
  <<: *run_sim

.run_reco_template: &run_reco
  stage: test_run_reco
  artifacts:
    paths:
      - macro/run/bmndst.root
      - macro/run/srcdst.root
  script:
    - source build/config.sh
    - root -b -q -l "$CI_PROJECT_DIR/$MACRO_NAME" | tee output.txt
    - (if grep -q "Macro finished successfully." output.txt; then $(exit 0); else $(exit -1); fi);
  allow_failure: false
  <<: *only-default
  
run_reco_bmn:centos:
  variables:
    MACRO_NAME: "macro/run/run_reco_bmn.C"
  tags:
    - test
    - centos
  dependencies:
    - build:centos
    - run_sim_bmn:centos
  <<: *run_reco
  
run_reco_bmn:ubuntu:
  variables:
    MACRO_NAME: "macro/run/run_reco_bmn.C"
  tags:
    - test
    - ubuntu
  dependencies:
    - build:ubuntu
    - run_sim_bmn:ubuntu
  <<: *run_reco

run_reco_src:centos:
  variables:
    MACRO_NAME: "macro/run/run_reco_src.C"
  tags:
    - test
    - centos
  dependencies:
    - build:centos
    - run_sim_src:centos
  <<: *run_reco
  
run_reco_src:ubuntu:
  variables:
    MACRO_NAME: "macro/run/run_reco_src.C"
  tags:
    - test
    - ubuntu
  dependencies:
    - build:ubuntu
    - run_sim_src:ubuntu
  <<: *run_reco
  
.run_digi_template: &run_digi
  stage: test_run_digi
  script:
    - source build/config.sh
    - root -b -q -l "$MACRO_NAME" | tee output.txt
    - (if grep -q "Macro finished successfully." output.txt; then $(exit 0); else $(exit -1); fi);
  allow_failure: false
  <<: *only-default
  
run_digi_bmn:centos:
  variables:
    MACRO_NAME: '$CI_PROJECT_DIR/macro/run/run_reco_bmn.C(\"$VMCWORKDIR/macro/run/testDigi.root\", \"$VMCWORKDIR/macro/run/bmndst_exp.root\", 0, 100)'
  tags:
    - test
    - centos
  dependencies:
    - build:centos
  <<: *run_digi
  
run_digi_bmn:ubuntu:
  variables:
    MACRO_NAME: '$CI_PROJECT_DIR/macro/run/run_reco_bmn.C(\"$VMCWORKDIR/macro/run/testDigi.root\", \"$VMCWORKDIR/macro/run/bmndst_exp.root\", 0, 100)'
  tags:
    - test
    - ubuntu
  dependencies:
    - build:ubuntu
  <<: *run_digi

run_digi_src:centos:
  variables:
    MACRO_NAME: '$CI_PROJECT_DIR/macro/run/run_reco_src.C(\"$VMCWORKDIR/macro/run/testSRCDigi.root\", \"$VMCWORKDIR/macro/run/srcdst_exp.root\", 0, 100)'
  tags:
    - test
    - centos
  dependencies:
    - build:centos
  <<: *run_digi
  
run_digi_src:ubuntu:
  variables:
    MACRO_NAME: '$CI_PROJECT_DIR/macro/run/run_reco_src.C(\"$VMCWORKDIR/macro/run/testSRCDigi.root\", \"$VMCWORKDIR/macro/run/srcdst_exp.root\", 0, 100)'
  tags:
    - test
    - ubuntu
  dependencies:
    - build:ubuntu
  <<: *run_digi

.deploy_template: &deploy
  stage: deploy
  before_script:
    - echo "Skipping global before_script"
  script:
    - IP=`ip -f inet addr show eth0 | grep -Po 'inet \K[\d.]+'`
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add /dev/stdin > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - sed -i "s/\/opt\/fairsoft\/install/\/cvmfs\/nica.jinr.ru\/$CI_ENVIRONMENT_NAME\/fairsoft\/bmn/g" SetEnv.sh
    - sed -i "s/\/opt\/fairroot\/install/\/cvmfs\/nica.jinr.ru\/$CI_ENVIRONMENT_NAME\/fairroot\/bmn/g" SetEnv.sh
    - rm -rf /cvmfs/nica.jinr.ru/$CI_ENVIRONMENT_NAME/bmnroot/$CI_COMMIT_REF_NAME
    - source ./SetEnv.sh
    - rm -rf build
    - mkdir build
    - cd build
    - echo "/cvmfs/nica.jinr.ru/$CI_ENVIRONMENT_NAME/bmnroot/$CI_COMMIT_REF_NAME"
    - cmake -DCMAKE_INSTALL_PREFIX=/cvmfs/nica.jinr.ru/$CI_ENVIRONMENT_NAME/bmnroot/$CI_COMMIT_REF_NAME ..
    - make -j 5
    - make install
    - ssh $STRATUM_0 "sudo cvmfs_server transaction nica.jinr.ru"
    - ssh $STRATUM_0 "cvmfs_rsync -a $IP:/cvmfs/nica.jinr.ru/$CI_ENVIRONMENT_NAME/bmnroot/$CI_COMMIT_REF_NAME /cvmfs/nica.jinr.ru/$CI_ENVIRONMENT_NAME/bmnroot/"
    - ssh $STRATUM_0 "sudo cvmfs_server publish nica.jinr.ru"
    - ssh-agent -k
  only:
    - tags
    - dev
  allow_failure: false
  
deploy:sl6:
  environment:
    name: sl6
  tags:
    - deploy
    - sl6
  <<: *deploy
  
deploy:centos7:
  environment:
    name: centos7
  tags:
    - deploy
    - centos
  <<: *deploy
